{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/desenvolvimento/Estudos/activityhubfront/src/hooks/use-signalR.ts"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport * as signalR from \"@microsoft/signalr\";\r\n\r\nexport default function useSignalR(\r\n  userId: string,\r\n  onNotification: (message: string) => void\r\n) {\r\n  const connectionRef = useRef<signalR.HubConnection | null>(null);\r\n\r\n  useEffect(() => {\r\n    const connection = new signalR.HubConnectionBuilder()\r\n      .withUrl(`http://localhost:5231/hubs/notifications?userId=${userId}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    connection.on(\"ReceiveNotification\", (message) => {\r\n      onNotification(message);\r\n    });\r\n\r\n    connection\r\n      .start()\r\n      .then(() => {\r\n        console.log(\"Connected in SignalR\");\r\n      })\r\n      .catch(console.error);\r\n\r\n    connectionRef.current = connection;\r\n\r\n    return () => {\r\n      connection.stop();\r\n    };\r\n  }, [userId]);\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEe,SAAS,WACtB,MAAc,EACd,cAAyC;IAEzC,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAgC;IAE3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,IAAI,6KAAA,CAAA,uBAA4B,GAChD,OAAO,CAAC,CAAC,gDAAgD,EAAE,QAAQ,EACnE,sBAAsB,GACtB,KAAK;QAER,WAAW,EAAE,CAAC,uBAAuB,CAAC;YACpC,eAAe;QACjB;QAEA,WACG,KAAK,GACL,IAAI,CAAC;YACJ,QAAQ,GAAG,CAAC;QACd,GACC,KAAK,CAAC,QAAQ,KAAK;QAEtB,cAAc,OAAO,GAAG;QAExB,OAAO;YACL,WAAW,IAAI;QACjB;IACF,GAAG;QAAC;KAAO;AACb","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file://C%3A/desenvolvimento/Estudos/activityhubfront/src/lib/react-query.ts"],"sourcesContent":["import { QueryClient } from \"@tanstack/react-query\";\r\n\r\nexport const queryClient = new QueryClient();\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,cAAc,IAAI,6KAAA,CAAA,cAAW","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file://C%3A/desenvolvimento/Estudos/activityhubfront/src/app/providers.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport useSignalR from \"@/hooks/use-signalR\";\r\nimport { queryClient } from \"@/lib/react-query\";\r\nimport { QueryClientProvider } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\n\r\nexport function Providers({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  const [messages, setMessages] = useState<string[]>([]);\r\n\r\n  useSignalR(\"1\", (msg) => {\r\n    setMessages((prev) => [...prev, msg]);\r\n  });\r\n\r\n  console.log(messages);\r\n  return (\r\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,SAAS,UAAU,EACxB,QAAQ,EAGR;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAErD,CAAA,GAAA,8HAAA,CAAA,UAAU,AAAD,EAAE,KAAK,CAAC;QACf,YAAY,CAAC,OAAS;mBAAI;gBAAM;aAAI;IACtC;IAEA,QAAQ,GAAG,CAAC;IACZ,qBACE,8OAAC,sLAAA,CAAA,sBAAmB;QAAC,QAAQ,4HAAA,CAAA,cAAW;kBAAG;;;;;;AAE/C","debugId":null}}]
}